{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamjoshi/Desktop/React_cource/src/Components/Chart/Chart.js\";\nimport React from \"react\";\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = props => {\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: props.dataPoints.map((dataPoint, index) => /*#__PURE__*/_jsxDEV(ChartBar, {\n      value: dataPoint.value,\n      maxValue: totalMaximum,\n      label: dataPoint.label\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/shubhamjoshi/Desktop/React_cource/src/Components/Chart/Chart.js"],"names":["React","ChartBar","Chart","props","dataPointValues","dataPoints","map","dataPoint","value","totalMaximum","Math","max","index","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,aAAP;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAEzB,QAAMC,eAAe,GAACD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,SAAS,IAAEA,SAAS,CAACC,KAA1C,CAAtB;AAEA,QAAMC,YAAY,GAAEC,IAAI,CAACC,GAAL,CAAS,GAAGP,eAAZ,CAApB;AAGE,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cAEGD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqB,CAACC,SAAD,EAAYK,KAAZ,kBACpB,QAAC,QAAD;AAEI,MAAA,KAAK,EAAEL,SAAS,CAACC,KAFrB;AAGI,MAAA,QAAQ,EAAEC,YAHd;AAII,MAAA,KAAK,EAAEF,SAAS,CAACM;AAJrB,OACSD,KADT;AAAA;AAAA;AAAA;AAAA,YADD;AAFH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CApBD;;KAAMV,K;AAsBN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n\nconst dataPointValues=props.dataPoints.map(dataPoint=>dataPoint.value);\n\nconst totalMaximum =Math.max(...dataPointValues);\n\n\n  return (\n    <div className=\"chart\">\n      \n      {props.dataPoints.map((dataPoint, index) => (\n        <ChartBar\n            key={index}\n            value={dataPoint.value}\n            maxValue={totalMaximum}\n            label={dataPoint.label}\n        />\n       ))} \n    </div>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}